head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2006.03.17.20.35.15;	author devel-it;	state Exp;
branches;
next	;


desc
@@


1.1
log
@*** empty log message ***
@
text
@<?
################################################################################
# Função:
#    Funções de data


/**
 * @@return unknown
 * @@desc Função para buscar data atual do sistema.
 Retorna um array com varias datas formatadas:
dataBanco: yyyy-mm-dd hh:mm:ss
dataNormal: dd-mm-yyyy hh:mm:ss
dataBancoGrapi: yyyy-mm-dd
dataCadGrapi: yyyymmdd000000
hoje: dd/mm/yyyy
agora: hh:mm:ss
*/
function dataSistema()
{
	# Receber data do sistema
	$dtSistema = getdate();
	$data[dia]=$dtSistema['mday'];
	$data[mes]=$dtSistema['mon'];
	$data[ano]=$dtSistema['year'];
	$data[hora]=$dtSistema['hours'];
	$data[min]=$dtSistema['minutes'];
	$data[seg]=$dtSistema['seconds'];
	
	# Verificar campos de data
	if(strlen($data[dia])==1)
	{
		$data[dia]="0".$data[dia];
	}
	if(strlen($data[mes])==1)
	{
		$data[mes]="0".$data[mes];
	}
	if(strlen($data[hora])==1)
	{
		$data[hora]="0".$data[hora];
	}
	if(strlen($data[min])==1)
	{
		$data[min]="0".$data[min];
	}
	if(strlen($data[seg])==1)
	{
		$data[seg]="0".$data[seg];
	}
	
	$data[dataBanco]=$data[ano].'-'.$data[mes].'-'.$data[dia].' '.$data[hora].':'.$data[min].':'.$data[seg];
	$data[dataNormal]=$data[dia].'-'.$data[mes].'-'.$data[ano].' '.$data[hora].':'.$data[min].':'.$data[seg];
	$data[dataBancoGrapi]=$data[ano].'-'.$data[mes].'-'.$data[dia];
	$data[dataCadGrapi]=$data[ano].$data[mes].$data[dia]."000000";
	$data[hoje]=$data[dia].'/'.$data[mes].'/'.$data[ano];
	$data[agora]=$data[hora].':'.$data[min].':'.$data[seg];
	
	$data[timestamp]=mktime($data[hora],$data[min],$data[seg],$data[mes],$data[dia],$data[ano]);
	
	return($data);
	
}


// Conversão de D10ptata
/**
 * @@return unknown
 * @@param unknown $data
 * @@param unknown $origem
 * @@param unknown $destino
 * @@desc Enter description here...
*/
function converteData($data, $origem, $destino) {

	if(strlen($data)>0) {
		// converter datas
		if($origem == "banco")
		{
			if( $destino == "form" ) {
				// Converter de data do banco para data normal
				$dia=substr($data,8,2);
				$mes=substr($data,5,2);
				$ano=substr($data,0,4);
				$hora=substr($data,11,2);
				$min=substr($data,14,2);
				$seg=substr($data,17,2);
		
				$data="$dia/$mes/$ano $hora:$min:$seg";
			}
			elseif($destino == "formdata") {
				// Converter de data do banco para data normal
				$dia=substr($data,8,2);
				$mes=substr($data,5,2);
				$ano=substr($data,0,4);
				
				$data="$dia/$mes/$ano";
			}
			elseif($destino == "formhora") {
				// Converter de data do banco para data normal
				$hora=substr($data,11,2);
				$min=substr($data,14,2);
				$seg=substr($data,17,2);
				
				$data="$hora:$min:$seg";
			}
			elseif($destino == 'timestamp') {
				// converter para unix format
				$dia=substr($data,8,2);
				$mes=substr($data,5,2);
				$ano=substr($data,0,4);
				$hora=substr($data,11,2);
				$min=substr($data,14,2);
				$seg=substr($data,17,2);
				
				$data=mktime($hora,$min,$seg,$mes, $dia, $ano);
			}

		}
		elseif($origem == "form") {

			if($destino == "banco") {
				// Converter de data normal para data do banco
				$dia=substr($data,0,2);
				$mes=substr($data,2,2);
				$ano=substr($data,4,4);
				$hora=substr($data,9,2);
				$min=substr($data,12,2);
				$seg=substr($data,15,2);
				
				$data="$ano-$mes-$dia $hora:$min:$seg";
			}
			if($destino == "agenda") {
				
				$dia=substr($data,0,2);
				$mes=substr($data,3,2);
				$ano=substr($data,6,4);
				$hora=substr($data,11,2);
				$min=substr($data,14,2);
				$seg=substr($data,17,2);
				
				$data="$ano-$mes-$dia $hora:$min:$seg";
			}
			elseif($destino == "bancodata") {
				// Converter de data normal para data do banco
				$dia=substr($data,0,2);
				$mes=substr($data,2,2);
				$ano=substr($data,4,4);
				
				$data="$ano-$mes-$dia";
			}
			elseif($destino == 'timestamp') {
				// converter para unix format
				$dia=substr($data,0,2);
				$mes=substr($data,2,2);
				$ano=substr($data,4,4);
				$hora=substr($data,9,2);
				$min=substr($data,12,2);
				$seg=substr($data,15,2);
				
				$data=mktime($hora,$min,$seg,$mes, $dia, $ano);
			}
		}
		elseif($origem=='timestamp') {
			if($destino=='formdata') $data=date('d/m/Y',$data);
			if($destino=='form') $data=date('d/m/Y H:i:s',$data);
			if($destino=='banco') $data=date("Y-m-d H:i:s",$data);
			if($destino=='formhora') {
				# quebrar tempo
				$matriz[horas]=intval($data/3600);
				$matriz[minutos]=intval( ($data/3600 - $matriz[horas]) * 60 );
				$matriz[segundos]=intval(((($data/3600 - $matriz[horas]) * 60) - $matriz[minutos]) * 60);
				
				if($matriz[horas]) {
					$retorno.="$matriz[horas]h, ";
				}
				
				if($matriz[minutos]) {
					$retorno.="$matriz[minutos]m, ";
				}
				
				$data=$retorno." $matriz[segundos]s";
			}
		}
		elseif($origem == "hora") {
			# Conversão de HH:MM:SS para timestamp
			if($destino=="segundos") {
				
				$arrData=explode(":",$data);
				
				$hora=$arrData[0];
				$minuto=$arrData[1];
				$segundo=$arrData[2];
				
				$retorno=($hora*3600) + ($minuto * 60) + $segundo;
				
				$data=$retorno;
				
			}
			else echo "erro";
		}
		elseif($origem == "arquivo")
		{
			if( $destino == "formdata" ) {
				// Converter de data do banco para data normal
				$dia=substr($data,0,2);
				$mes=substr($data,2,2);
				$ano=substr($data,4,2);
		
				$data="$dia/$mes/20$ano";
			}
			elseif ($destino == 'banco') {
			
				$dia=substr($data,0,2);
				$mes=substr($data,2,2);
				$ano=substr($data,4,4);
				$hora=substr($data,9,2);
				$min=substr($data,12,2);
				$seg=substr($data,15,2);
				
				$data="$dia/$mes/20$ano 00:00:00";
			}
		}
		
		// Retornar data convertida
		return($data);
	}
}

/**
 * @@return unknown
 * @@param unknown $data
 * @@desc Enter description here...
*/
function getDiaSemana($data, $tipo='') {
	
	$semana=array('Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado');
	$date=getdate(getUnixTime($data));
	if ($tipo=='num') 
		return $date['wday'];
	else
		return ($semana[$date['wday']]);
		
}

/**
 * @@return string(dd/mm/yyyy)
 * @@param data(dd/mm/yyyy) $data
 * @@param int $dias
 * @@desc soma $dias em $data, que deverá estar no formato dd/mm/yyyy
*/
function somaDia($data, $dias) {
	#60*60*24 = 1 dia em segundos
	$calc = (60*60*24*$dias);
	$ut=getUnixTime($data);
	$res=$ut+$calc;
	$dtf=getdate($res);
	
	$ret=formataData($dtf);
	
	return $ret;
}


/**
 * @@return timestamp
 * @@param dd/mm/yyyy $data
 * @@desc retorna o UnixTime / TimeStamp de data (dd/mm/yyyy)
*/
function getUnixTime($data) {
	$dt=explode("/", $data);
	return mktime(0,0,0,$dt[1],$dt[0],$dt[2],0);
}

/**
 * @@return void
 * @@param unknown $data
 * @@desc retorna o conteudo de getDate formatado em dd/mm/yyyy
*/
function formataData($data) {
	
	$dia=trim($data['mday']);
	if (strlen($dia)<2) $dia="0".$dia;
	
	$mes=trim($data['mon']);
	if (strlen($mes)<2) $mes="0".$mes;
	
	$ano=$data['year'];
	
	$ret="$dia/$mes/$ano"; 

	return $ret;
}

/**
 * @@return unknown
 * @@param unknown $data
 * @@desc Enter description here...
*/
function dataValida($data) {
	$ret="";
	if ($data) {
		$dt=explode("/", $data);
		$ret=checkdate($dt[1], $dt[0], $dt[2]);
	}
	return $ret;
	
}


function getUnixTimeHoras($data){
        $dia=substr($data,0,2);
        $mes=substr($data,3,2);
        $ano=substr($data,6,4);
        $hora=substr($data,11,2);
        $min=substr($data,14,2);
        $seg=substr($data,17,2);
        return ( mktime($hora, $min, $seg, $mes, $dia, $ano ) ) ;
}

function subtraiData($dataInicial, $dataFinal, $tipo){
        $time1 = getUnixTimeHoras($dataInicial);
        $time2 = getUnixTimeHoras($dataFinal);

        $dif = $time2 - $time1;

        if ($tipo == 'hora'){
                $horas = intval ($dif / 3600);
                $min = intval (($dif % 3600 ) / 60);
            $seg = intval (($dif % 3600 ) % 60);
            $duracao =  sprintf("%02d:%02d:%02d", $horas, $min, $seg);
           // return ($horas. ":". $min . ":". $seg);
           return ($duracao);
        }
}

?>
@
